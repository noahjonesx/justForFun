//Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

//You may assume that each input would have exactly one solution, and you may not use the same element twice.

//You can return the answer in any order.


class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        //vector<>nums;
        //int target;
        //length int of size of nums //replace body 2 of for loop
        int len = nums.size();
        for (int i = 0; i < len; i++) {
            for (int j = i + 1; j < len; j++) {
                //spot of j at nums is eq to target - i spot
                //take target and subtract what 2nd loop is at, that is what you need at 1st loop to equal target
                //
                if (target - nums[i] == nums[j])
                    return {i , j}; //return array of i and j
                }
            }
            //return array of -1 x2
       return {-1, -1};
    }
};
